---
  - name: Adding Kuberenetes repo
    yum_repository:
      name: Kubernetes
      description: Kubernetes yum repository
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgkey: 
        - https://packages.cloud.google.com/yum/doc/yum-key.gpg
        - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes
      repo_gpgcheck: yes

  - name: Adding DockerCE repo
    yum_repository:
      name: docker-ce-stable
      description: Docker CE Stable - $basearch
      baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
      gpgkey: https://download.docker.com/linux/centos/gpg
      gpgcheck: yes
      repo_gpgcheck: yes

  - name: Update repo cache
    yum:
      update_cache: yes

  - name: Add the br_netfilter module
    modprobe:
      name: br_netfilter
      state: present

  - name: Add the overlay module
    modprobe:
      name: overlay
      state: present

  - name: Creating a containerd.conf file for Kubernetes
    file:
     path: /etc/modules-load.d/containerd.conf
     state: touch

  - name: Letting iptables see bridged traffic
    blockinfile:
     path: /etc/modules-load.d/containerd.conf
     block: |
      overlay
      br_netfilter

  - name: Creating a containerd.conf file for Kubernetes
    file:
     path: /etc/modules-load.d/99-kubernetes-cri.conf
     state: touch

  - name: Letting iptables see bridged traffic
    blockinfile:
     path: /etc/modules-load.d/99-kubernetes-cri.conf
     block: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1

  - name: Apply sysctl params without reboot
    shell: sysctl --system

  - name: Installing required packages
    yum:
     name: "{{ packages }}"
     state: present

  - name: Create containerd folder in etc
    file:
      path: /etc/containerd
      state: directory
      mode: '0755'

  - name: Configure containerd
    shell: |
      containerd config default | tee /etc/containerd/config.toml

  - name: Restarting containerd service
    service:
     name: containerd
     state: restarted
     enabled: yes

  - name: Starting and Enabling the required services
    service:
     name: "{{ item }}"
     state: started
     enabled: yes
    with_items: "{{ services }}"

  - name: Allow Network Ports in Firewalld
    firewalld:
     port: "{{ item }}"
     state: enabled
     permanent: yes
    with_items: "{{ master_ports if ('k8s_masters' in group_names) else worker_ports }}"

  - name: Masquerade external zone
    firewalld: 
      zone: public
      masquerade: "yes"
      permanent: yes
      state: enabled
  
  - name: reload service firewalld
    systemd:
      name: firewalld
      state: reloaded

  - name: Fix NetworkManager DNS resolution inside cluster
    lineinfile:
      path: /etc/NetworkManager/NetworkManager.conf
      insertafter: '#plugins=ifcfg-rh'
      line: "dns=none"

  - name: Comment out searchdomains
    replace:
      ignore_errors: True
      path: /etc/resolv.conf
      regexp: '^search'
      replace: '#\1'

  - name: Restart NetworkManager
    systemd:
      name: NetworkManager
      state: restarted

#  - name: Stop & disable NetworkManager service
#    systemd:
#      name: NetworkManager
#      state: stopped
#      enabled: no